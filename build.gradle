plugins {
    id "fabric-loom" version "0.4-SNAPSHOT"
	id "org.ajoberstar.grgit" version "3.1.1"
}

repositories {
    maven {
        url = "https://maven.fabricmc.net/"
    }
    maven {
        url = "https://minecraft.guntram.de/maven/"
    }
    maven {
        url = "file:///tmp/mymavenrepo/"
    }
    
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    
    maven {
        url = "https://jitpack.io"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.Version = new Properties()
Version.load(file("version.properties").newReader())

ext.projectVersion = Version['modVersion']

ext.Versions = new Properties()
Versions.load(file("Versionfiles/mcversion-${Version['minecraftVersion']}.properties").newReader())


version = "${project.projectVersion}-${getBranch()}"

archivesBaseName = "blockmeter"

def getBranch() {
	if (System.getenv().GIT_BRANCH) {
		def branch = System.getenv().GIT_BRANCH
		return branch.substring(branch.lastIndexOf("/") + 1)
	}

	if (grgit == null) {
		return "unknown"
	}

	def branch = grgit.branch.current().name
	return branch.substring(branch.lastIndexOf("/") + 1)
}

minecraft {
    refmapName = "blockmeter-refmap.json";
}

processResources {
    inputs.property "version", project.version
    
    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

dependencies {
    modCompile ("org.bukkit:bukkit:1.15.2-R0.1-SNAPSHOT") {
        // This is to fix the error:
        // com.google.*:*:* has more than one client module definitions
        // in gradle > 4
        exclude group: "com.google.guava", module: "guava"
        exclude group: "com.google.code.gson", module: "gson"
    }

    minecraft   "com.mojang:minecraft:${Versions['minecraft_version']}"
    mappings    "net.fabricmc:yarn:${Versions['yarn_mappings']}:v2"
    modCompile  "net.fabricmc:fabric-loader:${Versions['loader_version']}"
    modCompile  "net.fabricmc.fabric-api:fabric-api:${Versions['fabric_version']}"

    modCompile  "io.github.prospector:modmenu:${Versions['modmenu_version']}"
    modCompile  "me.shedaniel.cloth:config-2:${Versions['clothconfig_version']}"
    modCompile  "me.sargunvohra.mcmods:autoconfig1u:${Versions['autoconfig_version']}"

    include     "me.shedaniel.cloth:config-2:${Versions['clothconfig_version']}"
    include     "me.sargunvohra.mcmods:autoconfig1u:${Versions['autoconfig_version']}"

    // Testing
    testImplementation  "org.junit.jupiter:junit-jupiter:5.+"
    testImplementation  "org.assertj:assertj-core:3.+"
    testImplementation  "org.mockito:mockito-inline:3.+"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}